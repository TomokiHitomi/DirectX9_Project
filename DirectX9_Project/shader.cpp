//=============================================================================
//
// タイトル処理 [title.cpp]
// Author : GP12A295 25 人見友基
//
//=============================================================================
#include "shader.h"

/* Debug */
#ifdef _DEBUG
#include "debugproc.h"
#endif

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// 更新処理
//=============================================================================
void Shader::Update(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void Shader::Draw(void)
{

}

//=============================================================================
// コンストラクタ処理
//=============================================================================
Shader::Shader(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();
	const char* path = SHADER_SPRITE;
	// ファイル( const char* path )からシェーダーファイルを読み込み読み込み
	hrEffect = D3DXCreateEffectFromFile(pDevice, path, 0, 0, 0, 0, &effectshader, &errorEffect);
	if (FAILED(hrEffect))
	{
		// エラー
		return S_FALSE;
	}
	// 使用するテクニックを定義
	hrEffect = effectshader->SetTechnique("Tec01");
	if (FAILED(hrEffect)) {

		// エラー
		return S_FALSE;
	}
}

//=============================================================================
// デストラクタ処理
//=============================================================================
Shader::~Shader(void)
{

}